{"version":3,"sources":["components/header/Navigation.js","components/header/Header.js","redux/actionTypes.js","redux/BaseUrl.js","redux/actionCreators.js","components/PhotoGallery/Loading.js","components/PhotoGallery/Single.js","components/PhotoGallery/FeedbackForm.js","components/PhotoGallery/LoadFeedback.js","components/PhotoGallery/ImageDetails.js","components/PhotoGallery/Food.js","components/PhotoGallery/Education.js","components/PhotoGallery/Technology.js","components/PhotoGallery/Nature.js","components/PhotoGallery/PhotoGallery.js","redux/authActionCreators.js","components/auth/Auth.js","components/auth/Logout.js","components/PhotoGallery/Body.js","components/Main.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","state","isOpen","toggle","setState","links","this","props","token","Nav","className","navbar","NavItem","to","Navbar","dark","color","expand","NavbarToggler","onClick","NavbarBrand","href","Collapse","Component","connect","Header","LOAD_PHOTOS","PHOTOS_LOADING","PHOTOS_FAILED","ADD_FEEDBACK","FEEDBACK_LOADING","LOAD_FEEDBACK","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOADING","AUTH_LOGOUT","baseUrl","fetchPhotos","dispatch","type","actionTypes","axios","get","then","response","data","photos","payload","loadPhotos","catch","error","errMsg","message","fetchFeedback","feedback","loadFeedback","addFeedback","photoId","rating","author","newFeedback","photId","post","feedbackConcat","Loading","style","padding","Single","float","Card","CardBody","CardImg","alt","src","photo","image","width","height","cursor","onImageSelect","FeedbackFrom","handleSubmit","event","preventDefault","handleInputChange","target","name","value","Form","onSubmit","Input","placeholder","onChange","required","Button","LoadFeedback","isFeedbackLoading","feedbacks","map","id","ImageDetails","top","Food","selectedPhoto","modalOpen","modalToggler","document","title","isLoading","Alert","item","single","categoryId","imageDetails","filter","CardColumns","Modal","ModalBody","ModalFooter","Education","Technology","Nature","PhotoGallery","featured","authSuccess","userId","logout","localStorage","removeItem","authLoading","authFailed","Auth","mode","switchModeHandler","authFailedMsg","form","initialValues","email","password","passwordConfirm","values","auth","validate","errors","test","length","handleChange","authData","returnSecureToken","authUrl","setItem","idToken","localId","expirationTime","Date","getTime","expiresIn","Logout","Body","authCheck","routes","path","exact","component","getItem","Main","INITIAL_STATE","myStore","createStore","action","key","push","concat","applyMiddleware","thunk","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","getElementById"],"mappings":"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","file":"static/js/main.70d093ab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavbarToggler, Collapse } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n    }\r\n}\r\n\r\nclass Navigation extends Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n    toggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n    render() {\r\n        let links = null;\r\n        if (this.props.token === null) {\r\n            links = (\r\n                <Nav className=\"ms-auto\" navbar>\r\n                    <NavItem>\r\n                        <Link to=\"/login\"\r\n                            className=\"nav-link border border-secondary text-primary\">\r\n                            Login</Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            )\r\n        } else {\r\n            links = (\r\n                <Nav className=\"ms-auto\" navbar>\r\n                    <NavItem>\r\n                        <Link to=\"/nature\" className=\"nav-link\">Nature</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/food\" className=\"nav-link\">Food</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/technology\" className=\"nav-link\">Technology</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/education\" className=\"nav-link\">Education</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/logout\"\r\n                            className=\"nav-link border border-secondary text-warning\">Logout</Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar dark color=\"dark\" expand=\"sm\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <NavbarBrand href=\"/\">Photo Gallery</NavbarBrand>\r\n                        <Collapse navbar isOpen={this.state.isOpen}>\r\n                            {links}\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","export const LOAD_PHOTOS = 'LOAD_PHOTOS';\r\nexport const PHOTOS_LOADING = 'PHOTOS_LOADING';\r\nexport const PHOTOS_FAILED = 'PHOTOS_FAILED';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n\r\nexport const FEEDBACK_LOADING = 'FEEDBACK_LOADING';\r\nexport const LOAD_FEEDBACK = 'LOAD_FEEDBACK';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILED = 'AUTH_FAILED';\r\nexport const AUTH_LOADING = 'AUTH_LOADING';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","export const baseUrl = 'http://localhost:3001/';","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport { baseUrl } from './BaseUrl';\r\n\r\nexport const loadPhotos = photos => ({\r\n    type: actionTypes.LOAD_PHOTOS,\r\n    payload: photos,\r\n})\r\n\r\nexport const photosLoading = () => ({\r\n    type: actionTypes.PHOTOS_LOADING,\r\n})\r\n\r\nexport const photosFailed = errMsg => ({\r\n    type: actionTypes.PHOTOS_FAILED,\r\n    payload: errMsg,\r\n})\r\n\r\nexport const fetchPhotos = () => dispatch => {\r\n    dispatch(photosLoading());\r\n    axios.get(baseUrl + \"photos\")\r\n        .then(response => response.data)\r\n        .then(photos => dispatch(loadPhotos(photos)))\r\n        .catch(error => dispatch(photosFailed(error.message)));\r\n}\r\n\r\nexport const feedbackLoading = () => ({\r\n    type: actionTypes.FEEDBACK_LOADING,\r\n})\r\n\r\nexport const loadFeedback = feedback => ({\r\n    type: actionTypes.LOAD_FEEDBACK,\r\n    payload: feedback,\r\n})\r\n\r\nexport const fetchFeedback = () => dispatch => {\r\n    dispatch(feedbackLoading());\r\n\r\n    axios.get(baseUrl + \"feedback\")\r\n        .then(response => response.data)\r\n        .then(feedback => dispatch(loadFeedback(feedback)));\r\n}\r\n\r\nexport const addFeedback = (photoId, rating, author, feedback) => dispatch => {\r\n    const newFeedback = {\r\n        photId: photoId,\r\n        author: author,\r\n        rating: rating,\r\n        feedback: feedback,\r\n    }\r\n\r\n    axios.post(baseUrl + 'feedback', newFeedback)\r\n        .then(response => response.data)\r\n        .then(feedback => dispatch(feedbackConcat(feedback)))\r\n}\r\n\r\nexport const feedbackConcat = feedback => ({\r\n    type: actionTypes.ADD_FEEDBACK,\r\n    payload: feedback,\r\n})\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"container text-center\" style={{ padding: \"60px\" }}>\r\n            <span className=\"fa fa-spinner fa-5x text-primary fa-fw fa-pulse\"></span>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardBody } from 'reactstrap';\r\nimport { baseUrl } from \"../../redux/BaseUrl\";\r\n\r\nclass Single extends Component {\r\n\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <div style={{ float: \"left\" }} className=\"my-2\">\r\n                <Card className=\"m-2\" >\r\n                    <CardBody className=\"\">\r\n                        <CardImg\r\n                            alt=\"picture\"\r\n                            src={baseUrl + this.props.photo.image}\r\n                            style={{ width: \"310px\", height: \"260px\", cursor: \"pointer\" }}\r\n                            onClick={this.props.onImageSelect}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Single;","import React, { Component } from \"react\";\r\nimport { Form, Input, Button } from 'reactstrap';\r\n\r\nclass FeedbackFrom extends Component {\r\n\r\n    state = {\r\n        author: \"\",\r\n        feedback: \"\",\r\n        rating: \"\",\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        this.props.addFeedback(this.props.photId, this.state.rating, this.state.author,\r\n            this.state.feedback)\r\n        this.setState({\r\n            author: \"\",\r\n            feedback: \"\",\r\n            rating: \"\",\r\n        })\r\n        event.preventDefault();\r\n    }\r\n    handleInputChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <div>\r\n                <Form onSubmit={event => this.handleSubmit(event)}>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"author\"\r\n                        value={this.state.author}\r\n                        placeholder=\"Your Name\"\r\n                        onChange={event => this.handleInputChange(event)}\r\n                        required /><br />\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"rating\"\r\n                        value={this.state.rating}\r\n                        onChange={event => this.handleInputChange(event)}\r\n                    >\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                        <option>4</option>\r\n                        <option>5</option>\r\n                    </Input><br />\r\n                    <Input\r\n                        type=\"textarea\"\r\n                        name=\"feedback\"\r\n                        value={this.state.feedback}\r\n                        placeholder=\"Your Feedback\"\r\n                        onChange={event => this.handleInputChange(event)}\r\n                        required\r\n                    /><br /><br />\r\n                    <Button type=\"submit\">Submit Feedback</Button>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FeedbackFrom;","import React from \"react\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst LoadFeedback = props => {\r\n    //console.log(props);\r\n    if (props.isFeedbackLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    } else {\r\n        return (\r\n            props.feedbacks.map(feedback => {\r\n                return (\r\n                    <div key={feedback.id}>\r\n                        <h5>Author: {feedback.author}</h5>\r\n                        <p>Rating: {feedback.rating}</p>\r\n                        <p>{feedback.feedback}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadFeedback;","import React from \"react\";\r\nimport { Card, CardBody, CardImg } from 'reactstrap';\r\nimport { baseUrl } from \"../../redux/BaseUrl\";\r\nimport FeedbackFrom from \"./FeedbackForm\";\r\nimport LoadFeedback from \"./LoadFeedback\";\r\n\r\nconst ImageDetails = props => {\r\n    //console.log(props);\r\n    // console.log(props.addFeedback);\r\n    return (\r\n        <div>\r\n            <Card className=\"m-3\">\r\n                <CardImg\r\n                    top\r\n                    src={baseUrl + props.photo.image}\r\n                    alt=\"Demo Img\"\r\n                />\r\n                <CardBody>\r\n                    <hr />\r\n                    <h5 className=\"text-center\">Feedbacks</h5>\r\n                    <LoadFeedback feedbacks={props.feedbacks}\r\n                        isFeedbackLoading={props.isFeedbackLoading} />\r\n                    <FeedbackFrom photId={props.photo.photId}\r\n                        addFeedback={props.addFeedback}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageDetails;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardColumns, Alert, Modal, ModalBody, Button, ModalFooter } from \"reactstrap\";\r\nimport { fetchPhotos, addFeedback, fetchFeedback } from \"../../redux/actionCreators\";\r\nimport Loading from \"./Loading\";\r\nimport Single from \"./Single\";\r\nimport ImageDetails from \"./ImageDetails\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photos: state.photos,\r\n        isLoading: state.isLoading,\r\n        errMsg: state.errMsg,\r\n        feedback: state.feedback,\r\n        isFeedbackLoading: state.isFeedbackLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchPhotos()),\r\n        fetchFeedback: () => dispatch(fetchFeedback()),\r\n        addFeedback: (photId, rating, author, feedback) => dispatch(addFeedback(\r\n            photId, rating, author, feedback\r\n        )),\r\n    }\r\n}\r\n\r\n\r\nclass Food extends Component {\r\n    state = {\r\n        selectedPhoto: null,\r\n        modalOpen: false,\r\n    }\r\n    onImageSelect = photo => {\r\n        this.setState({\r\n            selectedPhoto: photo,\r\n            modalOpen: !this.state.modalOpen,\r\n        })\r\n    }\r\n    modalToggler = () => {\r\n        this.setState({\r\n            modalOpen: !this.state.modalOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPhotos();\r\n        this.props.fetchFeedback();\r\n    }\r\n    render() {\r\n        document.title = \"Food\";\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        } else if (this.props.errMsg !== null) {\r\n            return (\r\n                <Alert color=\"danger\">{this.props.errMsg}, Make Sure The JSON SERVER IS ON\r\n                </Alert>\r\n            );\r\n        } else {\r\n            const photo = this.props.photos.map(item => {\r\n                let single = null;\r\n                if (item.categoryId === 1) {\r\n                    single = <Single key={item.photId} photo={item}\r\n                        onImageSelect={() => this.onImageSelect(item)} />\r\n                }\r\n                return single;\r\n            })\r\n\r\n            let imageDetails = null;\r\n            if (this.state.selectedPhoto !== null) {\r\n                //console.log(this.state.selectedPhoto);\r\n                const feedbacks = this.props.feedback.filter(item =>\r\n                    item.photId === this.state.selectedPhoto.photId\r\n                )\r\n                imageDetails = <ImageDetails\r\n                    photo={this.state.selectedPhoto}\r\n                    addFeedback={this.props.addFeedback}\r\n                    feedbacks={feedbacks}\r\n                    isFeedbackLoading={this.props.isFeedbackLoading}\r\n                />\r\n            }\r\n\r\n            return (\r\n                <div className=\"container\" >\r\n                    <div className=\"\">\r\n                        <CardColumns>\r\n                            {photo}\r\n                        </CardColumns>\r\n                        <Modal isOpen={this.state.modalOpen} >\r\n                            <ModalBody>\r\n                                {imageDetails}\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\"\r\n                                    onClick={this.modalToggler}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Food);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardColumns, Alert, Modal, ModalBody, Button, ModalFooter } from \"reactstrap\";\r\nimport { fetchPhotos, addFeedback, fetchFeedback } from \"../../redux/actionCreators\";\r\nimport Loading from \"./Loading\";\r\nimport Single from \"./Single\";\r\nimport ImageDetails from \"./ImageDetails\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photos: state.photos,\r\n        isLoading: state.isLoading,\r\n        errMsg: state.errMsg,\r\n        feedback: state.feedback,\r\n        isFeedbackLoading: state.isFeedbackLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchPhotos()),\r\n        fetchFeedback: () => dispatch(fetchFeedback()),\r\n        addFeedback: (photId, rating, author, feedback) => dispatch(addFeedback(\r\n            photId, rating, author, feedback\r\n        )),\r\n    }\r\n}\r\n\r\n\r\nclass Education extends Component {\r\n    state = {\r\n        selectedPhoto: null,\r\n        modalOpen: false,\r\n    }\r\n    onImageSelect = photo => {\r\n        this.setState({\r\n            selectedPhoto: photo,\r\n            modalOpen: !this.state.modalOpen,\r\n        })\r\n    }\r\n    modalToggler = () => {\r\n        this.setState({\r\n            modalOpen: !this.state.modalOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPhotos();\r\n        this.props.fetchFeedback();\r\n    }\r\n    render() {\r\n        document.title = \"Education\";\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        } else if (this.props.errMsg !== null) {\r\n            return (\r\n                <Alert color=\"danger\">{this.props.errMsg}, Make Sure The JSON SERVER IS ON\r\n                </Alert>\r\n            );\r\n        } else {\r\n            const photo = this.props.photos.map(item => {\r\n                let single = null;\r\n                if (item.categoryId === 0) {\r\n                    single = <Single key={item.photId} photo={item}\r\n                        onImageSelect={() => this.onImageSelect(item)} />\r\n                }\r\n                return single;\r\n            })\r\n\r\n            let imageDetails = null;\r\n            if (this.state.selectedPhoto !== null) {\r\n                //console.log(this.state.selectedPhoto);\r\n                const feedbacks = this.props.feedback.filter(item =>\r\n                    item.photId === this.state.selectedPhoto.photId\r\n                )\r\n                imageDetails = <ImageDetails\r\n                    photo={this.state.selectedPhoto}\r\n                    addFeedback={this.props.addFeedback}\r\n                    feedbacks={feedbacks}\r\n                    isFeedbackLoading={this.props.isFeedbackLoading}\r\n                />\r\n            }\r\n\r\n            return (\r\n                <div className=\"container\" >\r\n                    <div className=\"\">\r\n                        <CardColumns>\r\n                            {photo}\r\n                        </CardColumns>\r\n                        <Modal isOpen={this.state.modalOpen} >\r\n                            <ModalBody>\r\n                                {imageDetails}\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\"\r\n                                    onClick={this.modalToggler}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Education);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardColumns, Alert, Modal, ModalBody, Button, ModalFooter } from \"reactstrap\";\r\nimport { fetchPhotos, addFeedback, fetchFeedback } from \"../../redux/actionCreators\";\r\nimport Loading from \"./Loading\";\r\nimport Single from \"./Single\";\r\nimport ImageDetails from \"./ImageDetails\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photos: state.photos,\r\n        isLoading: state.isLoading,\r\n        errMsg: state.errMsg,\r\n        feedback: state.feedback,\r\n        isFeedbackLoading: state.isFeedbackLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchPhotos()),\r\n        fetchFeedback: () => dispatch(fetchFeedback()),\r\n        addFeedback: (photId, rating, author, feedback) => dispatch(addFeedback(\r\n            photId, rating, author, feedback\r\n        )),\r\n    }\r\n}\r\n\r\n\r\nclass Technology extends Component {\r\n    state = {\r\n        selectedPhoto: null,\r\n        modalOpen: false,\r\n    }\r\n    onImageSelect = photo => {\r\n        this.setState({\r\n            selectedPhoto: photo,\r\n            modalOpen: !this.state.modalOpen,\r\n        })\r\n    }\r\n    modalToggler = () => {\r\n        this.setState({\r\n            modalOpen: !this.state.modalOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPhotos();\r\n        this.props.fetchFeedback();\r\n    }\r\n    render() {\r\n        document.title = \"Technology\";\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        } else if (this.props.errMsg !== null) {\r\n            return (\r\n                <Alert color=\"danger\">{this.props.errMsg}, Make Sure The JSON SERVER IS ON\r\n                </Alert>\r\n            );\r\n        } else {\r\n            const photo = this.props.photos.map(item => {\r\n                let single = null;\r\n                if (item.categoryId === 2) {\r\n                    single = <Single key={item.photId} photo={item}\r\n                        onImageSelect={() => this.onImageSelect(item)} />\r\n                }\r\n                return single;\r\n            })\r\n\r\n            let imageDetails = null;\r\n            if (this.state.selectedPhoto !== null) {\r\n                //console.log(this.state.selectedPhoto);\r\n                const feedbacks = this.props.feedback.filter(item =>\r\n                    item.photId === this.state.selectedPhoto.photId\r\n                )\r\n                imageDetails = <ImageDetails\r\n                    photo={this.state.selectedPhoto}\r\n                    addFeedback={this.props.addFeedback}\r\n                    feedbacks={feedbacks}\r\n                    isFeedbackLoading={this.props.isFeedbackLoading}\r\n                />\r\n            }\r\n\r\n            return (\r\n                <div className=\"container\" >\r\n                    <div className=\"\">\r\n                        <CardColumns>\r\n                            {photo}\r\n                        </CardColumns>\r\n                        <Modal isOpen={this.state.modalOpen} >\r\n                            <ModalBody>\r\n                                {imageDetails}\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\"\r\n                                    onClick={this.modalToggler}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Technology);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardColumns, Alert, Modal, ModalBody, Button, ModalFooter } from \"reactstrap\";\r\nimport { fetchPhotos, addFeedback, fetchFeedback } from \"../../redux/actionCreators\";\r\nimport Loading from \"./Loading\";\r\nimport Single from \"./Single\";\r\nimport ImageDetails from \"./ImageDetails\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photos: state.photos,\r\n        isLoading: state.isLoading,\r\n        errMsg: state.errMsg,\r\n        feedback: state.feedback,\r\n        isFeedbackLoading: state.isFeedbackLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchPhotos()),\r\n        fetchFeedback: () => dispatch(fetchFeedback()),\r\n        addFeedback: (photId, rating, author, feedback) => dispatch(addFeedback(\r\n            photId, rating, author, feedback\r\n        )),\r\n    }\r\n}\r\n\r\n\r\nclass Nature extends Component {\r\n    state = {\r\n        selectedPhoto: null,\r\n        modalOpen: false,\r\n    }\r\n    onImageSelect = photo => {\r\n        this.setState({\r\n            selectedPhoto: photo,\r\n            modalOpen: !this.state.modalOpen,\r\n        })\r\n    }\r\n    modalToggler = () => {\r\n        this.setState({\r\n            modalOpen: !this.state.modalOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPhotos();\r\n        this.props.fetchFeedback();\r\n    }\r\n    render() {\r\n        document.title = \"Nature\";\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        } else if (this.props.errMsg !== null) {\r\n            return (\r\n                <Alert color=\"danger\">{this.props.errMsg}, Make Sure The JSON SERVER IS ON\r\n                </Alert>\r\n            );\r\n        } else {\r\n            const photo = this.props.photos.map(item => {\r\n                let single = null;\r\n                if (item.categoryId === 3) {\r\n                    single = <Single key={item.photId} photo={item}\r\n                        onImageSelect={() => this.onImageSelect(item)} />\r\n                }\r\n                return single;\r\n            })\r\n\r\n            let imageDetails = null;\r\n            if (this.state.selectedPhoto !== null) {\r\n                //console.log(this.state.selectedPhoto);\r\n                const feedbacks = this.props.feedback.filter(item =>\r\n                    item.photId === this.state.selectedPhoto.photId\r\n                )\r\n                imageDetails = <ImageDetails\r\n                    photo={this.state.selectedPhoto}\r\n                    addFeedback={this.props.addFeedback}\r\n                    feedbacks={feedbacks}\r\n                    isFeedbackLoading={this.props.isFeedbackLoading}\r\n                />\r\n            }\r\n\r\n            return (\r\n                <div className=\"container\" >\r\n                    <div className=\"\">\r\n                        <CardColumns>\r\n                            {photo}\r\n                        </CardColumns>\r\n                        <Modal isOpen={this.state.modalOpen} >\r\n                            <ModalBody>\r\n                                {imageDetails}\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\"\r\n                                    onClick={this.modalToggler}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nature);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardColumns, Alert, Modal, ModalBody, Button, ModalFooter } from \"reactstrap\";\r\nimport { fetchPhotos, addFeedback, fetchFeedback } from \"../../redux/actionCreators\";\r\nimport Single from \"./Single\";\r\nimport Loading from \"./Loading\";\r\nimport ImageDetails from \"./ImageDetails\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photos: state.photos,\r\n        isLoading: state.isLoading,\r\n        errMsg: state.errMsg,\r\n        feedback: state.feedback,\r\n        isFeedbackLoading: state.isFeedbackLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchPhotos()),\r\n        fetchFeedback: () => dispatch(fetchFeedback()),\r\n        addFeedback: (photId, rating, author, feedback) => dispatch(addFeedback(\r\n            photId, rating, author, feedback\r\n        )),\r\n    }\r\n}\r\n\r\nclass PhotoGallery extends Component {\r\n\r\n    state = {\r\n        selectedPhoto: null,\r\n        modalOpen: false,\r\n    }\r\n\r\n    onImageSelect = photo => {\r\n        this.setState({\r\n            selectedPhoto: photo,\r\n            modalOpen: !this.state.modalOpen,\r\n        })\r\n        this.props.fetchFeedback();\r\n    }\r\n    modalToggler = () => {\r\n        this.setState({\r\n            modalOpen: !this.state.modalOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPhotos();\r\n    }\r\n\r\n    render() {\r\n        document.title = \"Featured Photos\";\r\n        //console.log(this.props);\r\n\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        } else if (this.props.errMsg !== null) {\r\n            return (\r\n                <Alert color=\"danger\">{this.props.errMsg}, Make Sure The JSON SERVER IS ON\r\n                </Alert>\r\n            );\r\n        } else {\r\n            const photo = this.props.photos.map(item => {\r\n                let single = null;\r\n                if (item.featured) {\r\n                    single = <Single key={item.photId} photo={item}\r\n                        onImageSelect={() => this.onImageSelect(item)} />\r\n                }\r\n                return single;\r\n            })\r\n\r\n            let imageDetails = null;\r\n            if (this.state.selectedPhoto !== null) {\r\n                //console.log(this.state.selectedPhoto);\r\n                const feedbacks = this.props.feedback.filter(item =>\r\n                    item.photId === this.state.selectedPhoto.photId\r\n                )\r\n\r\n                imageDetails = <ImageDetails\r\n                    photo={this.state.selectedPhoto}\r\n                    addFeedback={this.props.addFeedback}\r\n                    feedbacks={feedbacks}\r\n                    isFeedbackLoading={this.props.isFeedbackLoading}\r\n                />\r\n            }\r\n\r\n            return (\r\n                <div className=\"container\" >\r\n                    <div className=\"\">\r\n                        <CardColumns>\r\n                            {photo}\r\n                        </CardColumns>\r\n                        <Modal isOpen={this.state.modalOpen} >\r\n                            <ModalBody>\r\n                                {imageDetails}\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\"\r\n                                    onClick={this.modalToggler}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotoGallery);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return ({\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        payload: {\r\n            token: token,\r\n            userId: userId,\r\n        }\r\n    })\r\n}\r\n\r\nexport const auth = (email, password, mode) => dispatch => {\r\n    dispatch(authLoading(true));\r\n    const authData = {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true,\r\n    }\r\n    let authUrl = null;\r\n    if (mode === \"Sign Up\") {\r\n        authUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\r\n    } else {\r\n        authUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\r\n    }\r\n    const API_KEY = \"AIzaSyBz6-rYmaA98VP38NFK3YVgG89u-81WrzY\"\r\n    axios.post(authUrl + API_KEY, authData)\r\n        .then(response => {\r\n            dispatch(authLoading(false));\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('expirationTime', expirationTime);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        })\r\n        .catch(error => {\r\n            dispatch(authLoading(false));\r\n            dispatch(authFailed(error.response.data.error.message));\r\n        });\r\n}\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    localStorage.removeItem('userId');\r\n    return ({\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    })\r\n}\r\n\r\nexport const authCheck = () => dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        dispatch(logout());\r\n    } else {\r\n        const expirationTime = new Date(localStorage.getItem('expirationTime'));\r\n        if (expirationTime <= new Date()) {\r\n            dispatch(logout());\r\n        } else {\r\n            const userId = localStorage.getItem('userId');\r\n            dispatch(authSuccess(token, userId));\r\n        }\r\n    }\r\n}\r\n\r\nexport const authLoading = isLoading => {\r\n    return {\r\n        type: actionTypes.AUTH_LOADING,\r\n        payload: isLoading,\r\n    }\r\n}\r\nexport const authFailed = errMsg => {\r\n    return {\r\n        type: actionTypes.AUTH_FAILED,\r\n        payload: errMsg,\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { Formik } from 'formik';\r\nimport { auth } from '../../redux/authActionCreators';\r\nimport { connect } from \"react-redux\";\r\nimport Loading from '../PhotoGallery/Loading';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        auth: (email, password, mode) => dispatch(auth(email, password, mode)),\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authLoading: state.authLoading,\r\n        authFailedMsg: state.authFailedMsg,\r\n    }\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        mode: \"Sign Up\",\r\n    }\r\n\r\n    switchModeHandler = () => {\r\n        this.setState({ mode: this.state.mode === \"Sign Up\" ? \"Login\" : \"Sign Up\" })\r\n    }\r\n    render() {\r\n        let error = null;\r\n        if (this.props.authFailedMsg !== null) {\r\n            error = <Alert color=\"danger\">{this.props.authFailedMsg}</Alert>\r\n        }\r\n        let form = null;\r\n        if (this.props.authLoading) {\r\n            form = <Loading />\r\n        } else {\r\n            form = (\r\n                <Formik\r\n                    initialValues={\r\n                        {\r\n                            email: \"\",\r\n                            password: \"\",\r\n                            passwordConfirm: \"\",\r\n                        }\r\n                    }\r\n                    onSubmit={\r\n                        values => {\r\n                            this.props.auth(values.email, values.password, this.state.mode);\r\n                        }\r\n                    }\r\n                    validate={(values) => {\r\n                        const errors = {};\r\n\r\n                        if (!values.email) {\r\n                            errors.email = \"Required\";\r\n                        } else if\r\n                            (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n                            errors.email = \"Invald Email Address\";\r\n                        }\r\n\r\n                        if (!values.password) {\r\n                            errors.password = \"Required\";\r\n                        } else if (values.password.length < 6) {\r\n                            errors.password = \"Must be atleast six characters\";\r\n                        }\r\n                        if (this.state.mode === \"Sign Up\") {\r\n                            if (!values.passwordConfirm) {\r\n                                errors.passwordConfirm = \"Required\";\r\n                            } else if (values.password !== values.passwordConfirm) {\r\n                                errors.passwordConfirm = \"password field does not match\";\r\n                            }\r\n                        }\r\n                        return errors;\r\n                    }}>\r\n                    {\r\n                        ({ values, handleChange, handleSubmit, errors }) => (\r\n                            <div className=\"container mt-5 border border-secondary p-3 rounded\">\r\n                                {this.state.mode === \"Sign Up\" ? <div>Already Has An Account?\r\n                                    <button className=\"btn btn-primary btn-sm py-2 ms-2\"\r\n                                        onClick={this.switchModeHandler}>Login\r\n                                    </button>\r\n                                </div> : <div>Switch To\r\n                                    <button className=\"btn btn-primary btn-sm py-2 ms-2\"\r\n                                        onClick={this.switchModeHandler}>Sign Up\r\n                                    </button> </div>} <br />\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <input name=\"email\"\r\n                                        placeholder=\"Enter Your Email\"\r\n                                        className=\"form-control\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange} />\r\n                                    <span className=\"text-danger\">{errors.email}</span><br />\r\n                                    <input name=\"password\" type=\"password\"\r\n                                        placeholder=\"Enter Password\"\r\n                                        className=\"form-control\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange} />\r\n                                    <span className=\"text-danger\">{errors.password}</span><br />\r\n                                    {this.state.mode === \"Sign Up\" ? (<div>\r\n                                        <input name=\"passwordConfirm\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            className=\"form-control\"\r\n                                            value={values.passwordConfirm}\r\n                                            onChange={handleChange} />\r\n                                        <span className=\"text-danger\">{errors.passwordConfirm}</span><br />\r\n                                    </div>) : null}\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-success\">\r\n                                        {this.state.mode === \"Sign Up\" ? \"Sign Up\" : \"Login\"}\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                </Formik>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container mt-2\">\r\n                {error}\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from '../../redux/authActionCreators'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return ({\r\n        logout: () => dispatch(logout()),\r\n    })\r\n}\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from \"react\";\r\nimport Food from './Food';\r\nimport Education from './Education';\r\nimport Technology from './Technology';\r\nimport Nature from './Nature';\r\nimport PhotoGallery from \"./PhotoGallery\";\r\nimport Auth from \"../auth/Auth\";\r\nimport Logout from \"../auth/Logout\";\r\nimport { authCheck } from \"../../redux/authActionCreators\";\r\n\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authCheck: () => dispatch(authCheck()),\r\n    }\r\n}\r\n\r\nclass Body extends Component {\r\n    componentDidMount() {\r\n        this.props.authCheck();\r\n    }\r\n    render() {\r\n        let routes = null;\r\n        if (this.props.token === null) {\r\n            routes = (<Switch>\r\n                <Route path=\"/login\" exact component={Auth} />\r\n                <Redirect to=\"/login\" />\r\n            </Switch>\r\n            )\r\n        } else {\r\n            routes = (\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={PhotoGallery} />\r\n                    <Route path=\"/nature\" exact component={Nature} />\r\n                    <Route path=\"/food\" exact component={Food} />\r\n                    <Route path=\"/education\" exact component={Education} />\r\n                    <Route path=\"/technology\" exact component={Technology} />\r\n                    <Route path=\"/logout\" exact component={Logout} />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {routes}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","import React, { Component } from 'react';\r\nimport Header from './header/Header';\r\nimport Body from './PhotoGallery/Body';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Body />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Main;","import * as actionTypes from './actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    photos: [],\r\n    isLoading: false,\r\n    errMsg: null,\r\n    isFeedbackLoading: true,\r\n    feedback: [],\r\n    token: null,\r\n    userId: null,\r\n    authLoading: false,\r\n    authFailedMsg: null,\r\n}\r\n\r\nexport const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PHOTOS_LOADING:\r\n            return {\r\n                ...state,\r\n                photos: [],\r\n                isLoading: true,\r\n                errMsg: null,\r\n            }\r\n        case actionTypes.LOAD_PHOTOS:\r\n            let photos = [];\r\n            for (let key in action.payload) {\r\n                photos.push({\r\n                    ...action.payload[key],\r\n                    id: key,\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                photos: photos,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PHOTOS_FAILED:\r\n            return {\r\n                ...state,\r\n                photos: [],\r\n                isLoading: false,\r\n                errMsg: action.payload,\r\n            }\r\n\r\n        case actionTypes.ADD_FEEDBACK:\r\n            let feedback = action.payload;\r\n            return ({\r\n                ...state,\r\n                isFeedbackLoading: false,\r\n                feedback: state.feedback.concat(feedback),\r\n            })\r\n\r\n        case actionTypes.FEEDBACK_LOADING:\r\n            return {\r\n                ...state,\r\n                isFeedbackLoading: true,\r\n                feedback: [],\r\n            }\r\n\r\n        case actionTypes.LOAD_FEEDBACK:\r\n            return {\r\n                ...state,\r\n                isFeedbackLoading: false,\r\n                feedback: action.payload,\r\n            }\r\n\r\n        //Auth\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                userId: action.payload.userId,\r\n            }\r\n\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                authFailedMsg: null,\r\n            }\r\n        case actionTypes.AUTH_LOADING:\r\n            return {\r\n                ...state,\r\n                authLoading: action.payload,\r\n            }\r\n        case actionTypes.AUTH_FAILED:\r\n            return {\r\n                ...state,\r\n                authFailedMsg: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducer } from './reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst myStore = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default myStore;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport { BrowserRouter } from 'react-router-dom';\nimport myStore from './redux/store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={myStore}>\n        <BrowserRouter>\n          <Main />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}